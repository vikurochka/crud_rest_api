package com.propyti.bank.entity;import lombok.*;import lombok.experimental.SuperBuilder;import javax.persistence.*;import java.util.List;@EqualsAndHashCode(callSuper = true)@Entity@Table(name = "users")@Data@NoArgsConstructor@AllArgsConstructor@SuperBuilderpublic class User extends BaseEntity {    private String firstName;    private String lastName;    private String email;    private String password;    private String username;    @ManyToMany(fetch = FetchType.EAGER)    @JoinTable(name = "user_roles",            joinColumns = {@JoinColumn(name = "user_id", referencedColumnName = "id")},            inverseJoinColumns = {@JoinColumn(name = "role_id", referencedColumnName = "id")})    private List<Role> roles;    @OneToOne(cascade = CascadeType.ALL)    @JoinColumn(name = "phone_id", referencedColumnName = "id")    private Phone phone;    @OneToOne(cascade = CascadeType.ALL)    @JoinColumn(name = "score_id", referencedColumnName = "id")    private Score score;    @Override    public String toString() {        return "User{" +                "firstName='" + firstName + '\'' +                ", lastName='" + lastName + '\'' +                ", email='" + email + '\'' +                ", password='" + password + '\'' +                ", username='" + username + '\'' +                ", roles=" + roles +                ", phone=" + phone +                ", score=" + score +                '}';    }}